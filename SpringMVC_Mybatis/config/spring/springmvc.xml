<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 可以扫描controller、service、···
	这里扫描controller，指定controller所在的包 -->
	<context:component-scan base-package="com.wrp.ssm.controller"></context:component-scan>
	
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/img/" mapping="/img/**"/>
	
<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
<!--注解适配器 --> 
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	<!-- 使用mvc:annotation-driven代替上边注解映射器和注解适配器的配置，
	mvc:annotation-driven默认加载了很多参数绑定方法，比如json转换解析器，使用mvc:annotation-driven不再配置上边的RequestMappingHandlerMapping和
	RequestMappingHandlerAdapter，实际使用时使用 mvc:annotation-driven
	-->
	<mvc:annotation-driven conversion-service="conversionService" validator="validator" >
		<mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
        	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
<!-- 视图解析器： 解析jsp，默认使用jstl标签，classpath下要有jstl的包  -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型的转换器 -->
				<bean class="com.wrp.ssm.controller.converter.CustomDateConverter"/>
			</list>
		</property>
	</bean>
	
	<!-- 校验器 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- Hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件的中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessage.properties文件 -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		 <property name="fileEncodings" value="utf-8" /> 
		<!-- 资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	<!-- 全局异常处理器  -->
	<!-- 只要实现的是HandlerExceptionResolver这个接口就是全局异常处理器 -->
	<bean class="com.wrp.ssm.exception.CustomExceptionResolver"></bean>
	
	<!-- 文件上传解析器配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大大小为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>
	
	<!-- 类似全局的拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器顺序执行 -->
		<mvc:interceptor>
			<!-- /** 表示拦截所有的url和子url路径 -->
			<mvc:mapping path="/**"/>
			<bean class="com.wrp.ssm.interceptor.HandlerInterceptor1"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.wrp.ssm.interceptor.HandlerInterceptor2"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>